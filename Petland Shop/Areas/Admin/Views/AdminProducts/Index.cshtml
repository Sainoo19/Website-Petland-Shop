
@using PagedList.Core.Mvc

@model PagedList.Core.IPagedList<Petland_Shop.Models.Product>

@{
    int CurrentPage = ViewBag.CurrentPage;
    ViewData["Product"] = "Product";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="card-body">
    <a class="btn btn-primary" asp-area="Admin" asp-controller="AdminProducts" asp-action="Create">Create</a>
    <div class="dataTable-wrapper dataTable-loading no-footer sortable searchable fixed-columns">
        <div class="dataTable-top"><div class="dataTable-dropdown"><select class="dataTable-selector form-select"><option value="5">5</option><option value="10" selected="">10</option><option value="15">15</option><option value="20">20</option><option value="25">25</option></select><label>entries per page</label></div><div class="dataTable-search"><input class="dataTable-input" placeholder="Search..." type="text"></div></div><div class="dataTable-container">
            <table class="table table-striped dataTable-table" id="table1">
                <thead>
                    <tr>
                        <th>ProductId</th>
                        <th>ProductName</th>
                        <th>Price</th>
                        <th>UnitsInStock</th>
                        <th>Cat</th>
                        <th>Status</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null)
                    {
                        foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.ProductId</td>
                                <td>@item.ProductName</td>
                               
                                <td>@item.Price.Value.ToString("#,##0") VND</td>
                                
                                
                               
                                <td>@item.UnitsInStock</td>
                                <td>@item.Cat.CatName</td>
                                
                                <td>
                                    @if (item.UnitsInStock.Value > 0)
                                    {
                                       <div>In Stock</div>
                                   }else{
                                        <div>Out Stock</div>
                                   }
                                    
                                </td>
                                <td>
                                    <div class="btn-group mb-3" role="group" aria-label="Basic example">
                                        <a type="button" class="btn btn-success" asp-area="Admin" asp-controller="AdminProducts" asp-action="Details" asp-route-id="@item.ProductId">View</a>
                                        <a type="button" class="btn btn-warning" asp-area="Admin" asp-controller="AdminProducts" asp-action="Edit" asp-route-id="@item.ProductId">Edit</a>
                                        <a type="button" class="btn btn-danger" asp-area="Admin" asp-controller="AdminProducts" asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
                                        @*<button type="button" class="btn btn-success"></button>
                                <button type="button" class="btn btn-warning"></button>
                                <button type="button" class="btn btn-danger"></button>*@
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                   
                </tbody>
            </table>
            <div aria-label="Page navigation example">
                <ul class="pagination">
                    <pager class="pager-contaner" list="@Model" asp-area="Admin" asp-controller="AdminCustomers" asp-action="Index" />
                </ul>

            </div>
        </div>
    </div>
</div>

